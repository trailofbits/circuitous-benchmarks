[imm:reduce]

fold-imm-identities:
  - (op_input_immediate ?a)
  - (?a)

[ops-to-ands]

decode-condtion-to-and:
  - (op_And 1:1 ?a)
  - (?a)

[logic:trivial]

reduce-trivial-and-rhs:
  - (op_And 1:1 ?a)
  - (?a)

reduce-trivial-and-lhs:
  - (op_And ?a 1:1)
  - (?a)


reduce-trivial-or-rhs:
  - (op_Or 1:1 ?a)
  - (1:1)

reduce-trivial-or-lhs:
  - (op_Or ?a 1:1)
  - (1:1)

or-single-arg:
  - (op_Or ?a)
  - (?a)

reduce-trivial-and-three-a:
  - (op_And ?a 1:1 1:1)
  - (?a)

reduce-trivial-and-three-b:
  - (op_And 1:1 ?a 1:1)
  - (?a)

reduce-trivial-and-three-c:
  - (op_And 1:1 1:1 ?a)
  - (?a)

reduce-trivial-and-four-a:
  - (op_And ?a 1:1 1:1 1:1)
  - (?a)

reduce-trivial-and-four-b:
  - (op_And 1:1 ?a 1:1 1:1)
  - (?a)

reduce-trivial-and-four-c:
  - (op_And 1:1 1:1 ?a 1:1)
  - (?a)

reduce-trivial-and-four-d:
  - (op_And 1:1 1:1 1:1 ?a)
  - (?a)

reduce-trivial-and-five:
  - (op_And 1:1 1:1 1:1 1:1 1:1)
  - (1:1)

reduce-trivial-and-five-a:
  - (op_And ?a 1:1 1:1 1:1 1:1)
  - (?a)

reduce-trivial-and-five-a:
  - (op_And 1:1 ?a 1:1 1:1 1:1)
  - (?a)

[add:trivial]

reduce-trivial-add-rhs-i8:
  - (op_Add 0:8 ?a)
  - (?a)

reduce-trivial-add-lhs-i8:
  - (op_Add ?a 0:8)
  - (?a)

reduce-trivial-add-rhs-i16:
  - (op_Add 0:16 ?a)
  - (?a)

reduce-trivial-add-lhs-i16:
  - (op_Add ?a 0:16)
  - (?a)

reduce-trivial-add-rhs-i32:
  - (op_Add 0:32 ?a)
  - (?a)

reduce-trivial-add-lhs-i32:
  - (op_Add ?a 0:32)
  - (?a)

reduce-trivial-add-rhs-i64:
  - (op_Add 0:64 ?a)
  - (?a)

reduce-trivial-add-lhs-i64:
  - (op_Add ?a 0:64)
  - (?a)

[sub:trivial]

reduce-trivial-sub-i8:
  - (op_Sub ?a 0:8)
  - (?a)

reduce-trivial-sub-i16:
  - (op_Sub ?a 0:16)
  - (?a)

reduce-trivial-sub-i32:
  - (op_Sub ?a 0:32)
  - (?a)

reduce-trivial-sub-i64:
  - (op_Sub ?a 0:64)
  - (?a)

[shl:trivial]

reduce-trivial-shl-lhs-i8:
  - (op_Shl ?a 0:8)
  - (?a)

reduce-trivial-shl-lhs-i16:
  - (op_Shl ?a 0:16)
  - (?a)

reduce-trivial-shl-lhs-i32:
  - (op_Shl ?a 0:32)
  - (?a)

reduce-trivial-shl-lhs-i64:
  - (op_Shl ?a 0:64)
  - (?a)

reduce-trivial-shl-rhs-i8:
  - (op_Shl 0:8 ?a)
  - (0:8)

reduce-trivial-shl-rhs-i16:
  - (op_Shl 0:16 ?a)
  - (0:16)

reduce-trivial-shl-rhs-i32:
  - (op_Shl 0:32 ?a)
  - (0:32)

reduce-trivial-shl-rhs-i64:
  - (op_Shl 0:64 ?a)
  - (0:64)

[lshr:trivial]

reduce-trivial-lshr-lhs-i8:
  - (op_LShr ?a 0:8)
  - (?a)

reduce-trivial-lshr-lhs-i16:
  - (op_LShr ?a 0:16)
  - (?a)

reduce-trivial-lshr-lhs-i32:
  - (op_LShr ?a 0:32)
  - (?a)

reduce-trivial-lshr-lhs-i64:
  - (op_LShr ?a 0:64)
  - (?a)

reduce-trivial-lshr-rhs-i8:
  - (op_LShr 0:8 ?a)
  - (0:8)

reduce-trivial-lshr-rhs-i16:
  - (op_LShr 0:16 ?a)
  - (0:16)

reduce-trivial-lshr-rhs-i32:
  - (op_LShr 0:32 ?a)
  - (0:32)

reduce-trivial-lshr-rhs-i64:
  - (op_LShr 0:64 ?a)
  - (0:64)

[ashr:trivial]

reduce-trivial-ashr-lhs-i8:
  - (op_AShr ?a 0:8)
  - (?a)

reduce-trivial-ashr-lhs-i16:
  - (op_AShr ?a 0:16)
  - (?a)

reduce-trivial-ashr-lhs-i32:
  - (op_AShr ?a 0:32)
  - (?a)

reduce-trivial-ashr-lhs-i64:
  - (op_AShr ?a 0:64)
  - (?a)

reduce-trivial-ashr-rhs-i8:
  - (op_AShr 0:8 ?a)
  - (0:8)

reduce-trivial-ashr-rhs-i16:
  - (op_AShr 0:16 ?a)
  - (0:16)

reduce-trivial-ashr-rhs-i32:
  - (op_AShr 0:32 ?a)
  - (0:32)

reduce-trivial-ashr-rhs-i64:
  - (op_AShr 0:64 ?a)
  - (0:64)

[mul:trivial]

reduce-trivial-mul-rhs-i8:
  - (op_Mul 1:8 ?a)
  - (?a)

reduce-trivial-mul-lhs-i8:
  - (op_Mul ?a 1:8)
  - (?a)

reduce-trivial-mul-rhs-i16:
  - (op_Mul 1:16 ?a)
  - (?a)

reduce-trivial-mul-lhs-i16:
  - (op_Mul ?a 1:16)
  - (?a)

reduce-trivial-mul-rhs-i32:
  - (op_Mul 1:32 ?a)
  - (?a)

reduce-trivial-mul-lhs-i32:
  - (op_Mul ?a 1:32)
  - (?a)

reduce-trivial-mul-rhs-i64:
  - (op_Mul 1:64 ?a)
  - (?a)

reduce-trivial-mul-lhs-i64:
  - (op_Mul ?a 1:64)
  - (?a)

reduce-trivial-mul-rhs-i8:
  - (op_Mul 0:8 ?a)
  - (0:8)

reduce-trivial-mul-lhs-i8:
  - (op_Mul ?a 0:8)
  - (0:8)

reduce-trivial-mul-rhs-i16:
  - (op_Mul 0:16 ?a)
  - (0:16)

reduce-trivial-mul-lhs-i16:
  - (op_Mul ?a 0:16)
  - (0:16)

reduce-trivial-mul-rhs-i32:
  - (op_Mul 0:32 ?a)
  - (0:32)

reduce-trivial-mul-lhs-i32:
  - (op_Mul ?a 0:32)
  - (0:32)

reduce-trivial-mul-rhs-i64:
  - (op_Mul 0:64 ?a)
  - (0:64)

reduce-trivial-mul-lhs-i64:
  - (op_Mul ?a 0:64)
  - (0:64)

[concat:trivial]

reduce-trivial-concat:
  - (op_concat ?a)
  - (?a)

[eq:trivial]

reduce-i8-eq-to-i1-lhs-neg:
  - (op_Icmp_eq 0:8 (op_ZExt ?a))
  - (op_not ?a)

reduce-i8-eq-to-i1-rhs-neg:
  - (op_Icmp_eq (op_ZExt ?a) 0:8)
  - (op_not ?a)

reduce-i8-eq-to-i1-lhs:
  - (op_Icmp_eq 1:8 (op_ZExt ?a))
  - (?a)

reduce-i8-eq-to-i1-rhs:
  - (op_Icmp_eq (op_ZExt ?a) 1:8)
  - (?a)

reduce-trivial-eq-lhs-neg:
  - (op_Icmp_eq 0:1 ?a)
  - (op_not ?a)

reduce-trivial-eq-rhs-neg:
  - (op_Icmp_eq ?a 0:1)
  - (op_not ?a)

reduce-trivial-eq-lhs:
  - (op_Icmp_eq 1:1 ?a)
  - (?a)

reduce-trivial-eq-rhs:
  - (op_Icmp_eq ?a 1:1)
  - (?a)

[parity]

reduce-and-parity-1:
  - (op_Trunc:1 (op_Xor (op_And ?a 1:8) 1:8))
  - (op_not (op_Trunc ?a))

reduce-and-parity-2:
  - (op_Trunc:1 (op_Xor (op_And 1:8 ?a) 1:8))
  - (op_not (op_Trunc:1 ?a))

reduce-and-parity-3:
  - (op_Trunc:1 (op_Xor 1:8 (op_And ?a 1:8)))
  - (op_not (op_Trunc:1 ?a))

reduce-and-parity-3:
  - (op_Trunc:1 (op_Xor 1:8 (op_And 1:8 ?a)))
  - (op_not (op_Trunc:1 ?a))

[icmp:trivial]

icmp-eq-trivial:
  - (op_Icmp_eq ?a ?a)
  - (1:1)
